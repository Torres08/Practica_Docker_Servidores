user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {

    # Para el apartado A2
    ssl_session_cache shared:SSL:10m; # tamaño de cache y tipo
    ssl_session_timeout 10m; # tiempo de vida de la cache
    ssl_session_tickets on; # activar tickets de sesion

    # Para el apartado A4
    ssl_protocols TLSv1.2 TLSv1.3; # Utilizamos TLSv1.2 y TLSv1.3 para maximizar la seguridad y el rendimiento.
    ssl_prefer_server_ciphers off; # Desactivamos la preferencia por los cifrados del servidor para permitir que el cliente elija el mejor cifrado disponible.
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH'; # Utilizamos suites de cifrado modernas y seguras para garantizar la confidencialidad y la integridad de los datos.

    # Habilitar HTTP/2 para mejorar la eficiencia de las conexiones HTTPS
    http2_max_concurrent_streams 64; # Limitamos el número máximo de corrientes concurrentes para mantener el rendimiento del servidor.
    http2_max_field_size 16k; # Limitamos el tamaño máximo de los campos de encabezado para evitar ataques de denegación de servicio.
    http2_max_header_size 32k; # Limitamos el tamaño máximo de los encabezados para evitar ataques de denegación de servicio.
    
    server_tokens off; # Desactivamos la información del servidor para evitar la divulgación de información sensible.
    client_body_buffer_size 1K; # Limitamos el tamaño del búfer del cuerpo del cliente para evitar ataques de denegación de servicio.
    client_header_buffer_size 1k; # Limitamos el tamaño del búfer de encabezado del cliente para evitar ataques de denegación de servicio.
    client_max_body_size 1k; # Limitamos el tamaño máximo del cuerpo del cliente para evitar ataques de denegación de servicio.
    large_client_header_buffers 2 1k; # Limitamos el tamaño de los búferes de encabezado del cliente para evitar ataques de denegación de servicio.

    upstream backend_juanluis {
        server 192.168.10.9; # web1
        server 192.168.10.2; # web2
        server 192.168.10.3; # web3
        server 192.168.10.4; # web4
        server 192.168.10.5; # web5
        server 192.168.10.6; # web6
        server 192.168.10.7; # web7
        server 192.168.10.8; # web8
    }

    server {
        
        add_header X-Frame-Options "SAMEORIGIN"; # Evitamos ataques de clickjacking.
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"; # Habilitamos HSTS para mejorar la seguridad de la conexión.
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        add_header X-XSS-Protection "1; mode=block"; # Habilitamos la protección contra ataques de scripting entre sitios.
        
        listen 443 ssl http2; # Escuchamos en el puerto 443 con SSL y HTTP/2 habilitado.
        listen 192.168.10.50:443 ssl http2;
        server_name nginx_juanluis;

        access_log /var/log/nginx/nginx_juanluis.access.log;
        error_log /var/log/nginx/nginx_juanluis.error.log;

        ssl_certificate /etc/nginx/ssl/certificado_juanluis.crt;
        ssl_certificate_key /etc/nginx/ssl/certificado_juanluis.key;


        location / {
            limit_except GET HEAD POST { deny all; } 

            proxy_pass http://backend_juanluis;
            proxy_set_header Cookie $http_cookie;
            proxy_hide_header Set-Cookie;
            
        }

        location /estadisticas_juanluis {
            stub_status on;
        }
    }

    ## 

    server {
        listen 80;
        server_name nginx_juanluis;

        access_log /var/log/nginx/nginx_juanluis.access.log;
        error_log /var/log/nginx/nginx_juanluis.error.log;
       
        location / {
            proxy_pass http://backend_juanluis;
            proxy_set_header Cookie $http_cookie;
            proxy_hide_header Set-Cookie;
        }

        location /estadisticas_juanluis {
            stub_status on;
        }
    }
}


